'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _base = require('./base.js');

var _base2 = _interopRequireDefault(_base);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _class = function (_Base) {
  (0, _inherits3.default)(_class, _Base);

  function _class() {
    (0, _classCallCheck3.default)(this, _class);
    return (0, _possibleConstructorReturn3.default)(this, _Base.apply(this, arguments));
  }

  _class.prototype.getAction = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt('return', this.fail('please use post method!'));

            case 1:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function getAction() {
      return _ref.apply(this, arguments);
    }

    return getAction;
  }();

  _class.prototype.postAction = function () {
    var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {
      var obj, id, model, data;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              obj = this.post('obj');
              id = this.post('id');

              console.log(obj, id);

              if (!(!obj || !id)) {
                _context2.next = 5;
                break;
              }

              return _context2.abrupt('return', this.fail('ADMIN_PARAM_LACKED'));

            case 5:
              if (obj == 'science') {
                obj = 'science_advisor';
              }
              model = this.model(obj);
              _context2.next = 9;
              return model.where({ id: id }).find();

            case 9:
              data = _context2.sent;

              if (think.isEmpty(data)) {
                _context2.next = 18;
                break;
              }

              _context2.t0 = this;
              _context2.next = 14;
              return model.update({ id: id, isdelete: 1 });

            case 14:
              _context2.t1 = _context2.sent;
              return _context2.abrupt('return', _context2.t0.success.call(_context2.t0, _context2.t1));

            case 18:
              return _context2.abrupt('return', this.fail('can not fond data ,id = ' + id));

            case 19:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function postAction() {
      return _ref2.apply(this, arguments);
    }

    return postAction;
  }();

  return _class;
}(_base2.default);

exports.default = _class;
;
//# sourceMappingURL=delete.js.map