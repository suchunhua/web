{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\common\\config\\view.js"
    ],
    "names": [
        "type",
        "content_type",
        "file_ext",
        "file_depr",
        "root_path",
        "think",
        "ROOT_PATH",
        "adapter",
        "nunjucks",
        "prerender",
        "env",
        "addFilter",
        "size",
        "delimiter",
        "units",
        "i",
        "Math",
        "round",
        "d",
        "sec",
        "time",
        "date",
        "Date",
        "y",
        "getFullYear",
        "M",
        "getMonth",
        "getDate",
        "h",
        "getHours",
        "m",
        "getMinutes",
        "s",
        "getSeconds",
        "config",
        "moment",
        "require",
        "isEmpty",
        "fromNow",
        "format",
        "url",
        "str",
        "replace",
        "slice"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\common\\config\\view.js",
    "sourcesContent": [
        "'use strict';\n/**\n * template config\n */\nexport default {\n  type: 'nunjucks',\n  content_type: 'text/html',\n  file_ext: '.html',\n  file_depr: '_',\n  root_path: think.ROOT_PATH + '/view',\n  //root_path:'',\n  adapter: {\n    nunjucks: {\n    \t\tprerender:(nunjucks,env) => {\n    \t\t\t/**\n                 * 格式化字节大小\n                 * @param  number size      字节数\n                 * @param  string delimiter 数字和单位分隔符\n                 * @return string            格式化后的带单位的大小\n                 */\n                env.addFilter(\"format_bytes\", function (size, delimiter = '') {\n                    let units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\n                    for (var i = 0; size >= 1024 && i < 5; i++) size /= 1024;\n                    return Math.round(size * 100) / 100 + delimiter + units[i];\n                });\n                /**\n                 * 格式化时间\n                 */\n                env.addFilter(\"format_time\", function (d, sec) {\n                    var time;\n                    var date = new Date(d);\n                    var y = date.getFullYear();\n                    var M = date.getMonth() + 1;\n                    M = M < 10 ? \"0\" + M : M;\n                    var d = date.getDate();\n                    d = d < 10 ? \"0\" + d : d;\n                    var h = date.getHours();\n                    h = h < 10 ? \"0\" + h : h;\n                    var m = date.getMinutes();\n                    m = m < 10 ? \"0\" + m : m;\n                    var s = date.getSeconds();\n                    s = s < 10 ? \"0\" + s : s;\n                    if (sec) {\n                        time = y + \"-\" + M + \"-\" + d + \" \" + h + \":\" + m + \":\" + s;\n                    } else {\n                        time = y + \"-\" + M + \"-\" + d ;\n                    }\n                    return time;\n                })\n                /**\n                 * moment\n                 * YYYY-MM-DD HH:mm:ss\n                 * lll\n                 */\n                env.addFilter(\"moment\",function (time,config) {\n                    let moment = require('moment');\n                    if(think.isEmpty(config)){\n                        return moment(time).fromNow();\n                    }else {\n                        return moment(time).format(config);\n                    }\n\n\n                })\n\n                env.addFilter(\"format_img\",function(url){\n                  return url + '?imageView2/1/w/1600/h/900';\n                })\n\n                env.addFilter('remove_html_tag',function(str){\n    \n                    str = str.replace(/<\\/?[^>]*>/g,''); //去除HTML tag\n                    str = str.replace(/[ | ]*\\n/g,'\\n'); //去除行尾空白\n                    //str = str.replace(/\\n[\\s| | ]*\\r/g,'\\n'); //去除多余空行\n                    str=str.replace(/&nbsp;/ig,'');//去掉&nbsp;\n                    return str;\n                })\n\n                env.addFilter('split_str',function(str){\n                    return str.slice(0,200) + '...';\n                })\n    \t\t}\n    }\n  }\n};"
    ]
}