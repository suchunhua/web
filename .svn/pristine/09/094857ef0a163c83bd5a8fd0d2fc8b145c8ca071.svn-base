'use strict';

exports.__esModule = true;

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

var _connbase = require('./connbase.js');

var _connbase2 = _interopRequireDefault(_connbase);

var _usermgr = require('./usermgr.js');

var _usermgr2 = _interopRequireDefault(_usermgr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require("./timesolver.js");

var orderMap = new _map2.default();

var _class = function (_ConnBase) {
	(0, _inherits3.default)(_class, _ConnBase);

	function _class() {
		var _temp, _this, _ret;

		(0, _classCallCheck3.default)(this, _class);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _ConnBase.call.apply(_ConnBase, [this].concat(args))), _this), _this.serverUrl = '/elws/services/fdmsys', _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	}

	_class.prototype.updTestOrder = function () {
		var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(senderId, orderId, customerId, testItem, phoneNumber, recvContactInfo, reptReceiver, orderAmt, recvAddress, notes, promCode) {
			var user, recvAddress1, reptReceiver1, notes1, tod, path;
			return _regenerator2.default.wrap(function _callee$(_context) {
				while (1) {
					switch (_context.prev = _context.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);
							recvAddress1 = encodeURIComponent(recvAddress, 'UTF-8');
							reptReceiver1 = encodeURIComponent(reptReceiver, 'UTF-8');
							notes1 = encodeURIComponent(notes, 'UTF-8');

							if (!(user != null)) {
								_context.next = 18;
								break;
							}

							tod = new Date();
							path = this.serverUrl + '/updTestOrder?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&orderId=' + orderId + '&customerId=' + customerId + '&testItem=' + testItem + '&sendDate=' + this.format(tod)
							//  encodeURIComponent(tod.toDateString())
							+ '&testType=2&orderStatus=6&needReturn=true';


							if (phoneNumber != null) {
								path += '&phoneNumber=' + phoneNumber;
							}
							if (recvContactInfo != null) {
								path += '&recvContactInfo=' + recvContactInfo;
							}
							if (reptReceiver != null) {
								path += '&reptReceiver=' + reptReceiver1;
							}
							if (orderAmt != null) {
								path += '&orderAmt=' + orderAmt;
							}
							if (recvAddress != null) {
								path += '&recvAddress=' + recvAddress1;
							}
							if (notes != null) {
								path += '&notes=' + notes1;
							}
							if (promCode != null) {
								path += '&promCode=' + promCode;
							}
							this.updatePath(path);
							return _context.abrupt('return', this.sendRequest());

						case 18:
							return _context.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 19:
						case 'end':
							return _context.stop();
					}
				}
			}, _callee, this);
		}));

		function updTestOrder(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11) {
			return _ref.apply(this, arguments);
		}

		return updTestOrder;
	}();

	_class.prototype.downLoadPill = function () {
		var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(senderId, orderId) {
			var user;
			return _regenerator2.default.wrap(function _callee2$(_context2) {
				while (1) {
					switch (_context2.prev = _context2.next) {
						case 0:
							console.log("---------downLoadPill start-------------");
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context2.next = 7;
								break;
							}

							this.updatePath(this.serverUrl + '/queryEReceipt?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&orderId=' + orderId);
							return _context2.abrupt('return', this.sendRequest());

						case 7:
							return _context2.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 8:
						case 'end':
							return _context2.stop();
					}
				}
			}, _callee2, this);
		}));

		function downLoadPill(_x12, _x13) {
			return _ref2.apply(this, arguments);
		}

		return downLoadPill;
	}();

	_class.prototype.deleteTestItem = function () {
		var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(senderId, itemId) {
			var user;
			return _regenerator2.default.wrap(function _callee3$(_context3) {
				while (1) {
					switch (_context3.prev = _context3.next) {
						case 0:

							console.log("------deleteTestItem start----------------");
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context3.next = 7;
								break;
							}

							this.updatePath(this.serverUrl + '/deleteTestItem?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&itemId=' + itemId);
							return _context3.abrupt('return', this.sendRequest());

						case 7:
							return _context3.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 8:
						case 'end':
							return _context3.stop();
					}
				}
			}, _callee3, this);
		}));

		function deleteTestItem(_x14, _x15) {
			return _ref3.apply(this, arguments);
		}

		return deleteTestItem;
	}();

	//update order information
	//updTestInfo(senderId, secToken, testOrderId, custId, doctor, feeStatus, needRet, phone, 
	//recvContactInfo, reportReceiver, sendDate, sendContactInfo, senderName, sendUnit, sendTechoffice, 
	//testType, testStatus, itemId);

	_class.prototype.addItem = function () {
		var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(senderId, pdtinfor) {
			var user, name, desc;
			return _regenerator2.default.wrap(function _callee4$(_context4) {
				while (1) {
					switch (_context4.prev = _context4.next) {
						case 0:
							console.log("---------addTtem start--------------");
							console.log(pdtinfor);

							user = _usermgr2.default.getUser(senderId);
							name = encodeURIComponent(pdtinfor.name);
							desc = encodeURIComponent(pdtinfor.desc);

							if (!(user != null)) {
								_context4.next = 10;
								break;
							}

							this.updatePath(this.serverUrl + '/addTestItem?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&name=' + name + '&desc=' + desc + '&price=' + pdtinfor.price);
							return _context4.abrupt('return', this.sendRequest());

						case 10:
							return _context4.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 11:
						case 'end':
							return _context4.stop();
					}
				}
			}, _callee4, this);
		}));

		function addItem(_x16, _x17) {
			return _ref4.apply(this, arguments);
		}

		return addItem;
	}();

	_class.prototype.updTestInfo = function () {
		var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5(senderId, infor) {
			var user;
			return _regenerator2.default.wrap(function _callee5$(_context5) {
				while (1) {
					switch (_context5.prev = _context5.next) {
						case 0:
							console.log("---------updTestInfo start--------------");
							console.log(infor);
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context5.next = 8;
								break;
							}

							this.updatePath(this.serverUrl + '/updTestInfo?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&testId=' + senderId + '&custId=' + orderId + '&doctor=true' + '&feeStatus=true' + '&needRet=false' + '&phoneNum=' + orderId + '&recvContactInfo=' + orderId + '&reportReceiver=' + orderId + '&sendDate=' + orderId + '&sendContactInfo=' + orderId + '&senderName=' + orderId + '&sendUnit=' + orderId + '&sendTechoffice=' + orderId + '&testType=' + orderId + '&testStatus=' + orderId + '&itemId=' + orderId);
							return _context5.abrupt('return', this.sendRequest());

						case 8:
							return _context5.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 9:
						case 'end':
							return _context5.stop();
					}
				}
			}, _callee5, this);
		}));

		function updTestInfo(_x18, _x19) {
			return _ref5.apply(this, arguments);
		}

		return updTestInfo;
	}();

	//pay addmethod 


	_class.prototype.addOrUpdOrderAccess = function () {
		var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6(senderId, orderId) {
			var user;
			return _regenerator2.default.wrap(function _callee6$(_context6) {
				while (1) {
					switch (_context6.prev = _context6.next) {
						case 0:
							console.log("======= addOrUpdOrderAccess start=======");
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context6.next = 7;
								break;
							}

							this.updatePath(this.serverUrl + '/addOrUpdOrderAccess?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&userId=' + senderId + '&orderId=' + orderId + '&ownerYn=true' + '&creatorYn=true' + '&assignedYn=false');
							return _context6.abrupt('return', this.sendRequest());

						case 7:
							return _context6.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 8:
						case 'end':
							return _context6.stop();
					}
				}
			}, _callee6, this);
		}));

		function addOrUpdOrderAccess(_x20, _x21) {
			return _ref6.apply(this, arguments);
		}

		return addOrUpdOrderAccess;
	}();

	//更新折扣产品信息


	_class.prototype.updDiscPrice = function () {
		var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7(senderId, id, itemId, promotionCode, startDate, endDate, price) {
			var user;
			return _regenerator2.default.wrap(function _callee7$(_context7) {
				while (1) {
					switch (_context7.prev = _context7.next) {
						case 0:
							console.log("======= updDiscPrice start=======");
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context7.next = 7;
								break;
							}

							this.updatePath(this.serverUrl + '/updDiscPrice?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&id=' + id + '&itemId=' + itemId + '&promotionCode=' + promotionCode + '&startDate=' + startDate + '&endDate=' + endDate + '&price=' + price);
							return _context7.abrupt('return', this.sendRequest());

						case 7:
							return _context7.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 8:
						case 'end':
							return _context7.stop();
					}
				}
			}, _callee7, this);
		}));

		function updDiscPrice(_x22, _x23, _x24, _x25, _x26, _x27, _x28) {
			return _ref7.apply(this, arguments);
		}

		return updDiscPrice;
	}();
	//删除折扣产品信息

	_class.prototype.deleleDiscPrice = function () {
		var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8(senderId, id) {
			var user;
			return _regenerator2.default.wrap(function _callee8$(_context8) {
				while (1) {
					switch (_context8.prev = _context8.next) {
						case 0:

							console.log("======= deleteDisc start=======");
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context8.next = 7;
								break;
							}

							this.updatePath(this.serverUrl + '/deleleDiscPrice?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&id=' + id);
							return _context8.abrupt('return', this.sendRequest());

						case 7:
							return _context8.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 8:
						case 'end':
							return _context8.stop();
					}
				}
			}, _callee8, this);
		}));

		function deleleDiscPrice(_x29, _x30) {
			return _ref8.apply(this, arguments);
		}

		return deleleDiscPrice;
	}();

	_class.prototype.updateProductionPrice = function () {
		var _ref9 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee9(senderId, itemId, name, desc, price) {
			var user;
			return _regenerator2.default.wrap(function _callee9$(_context9) {
				while (1) {
					switch (_context9.prev = _context9.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context9.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/updTestItem?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&itemId=' + itemId + '&name=' + name + '&desc=' + desc + '&price=' + price);
							return _context9.abrupt('return', this.sendRequest());

						case 6:
							return _context9.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context9.stop();
					}
				}
			}, _callee9, this);
		}));

		function updateProductionPrice(_x31, _x32, _x33, _x34, _x35) {
			return _ref9.apply(this, arguments);
		}

		return updateProductionPrice;
	}();
	//pricelist

	_class.prototype.getTestItemList = function () {
		var _ref10 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee10(userId) {
			var user;
			return _regenerator2.default.wrap(function _callee10$(_context10) {
				while (1) {
					switch (_context10.prev = _context10.next) {
						case 0:
							user = _usermgr2.default.getUser(userId);

							if (!(user != null)) {
								_context10.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/getTestItemList?' + 'senderId=' + userId + '&secToken=' + user.secToken);
							return _context10.abrupt('return', this.sendRequest());

						case 6:
							return _context10.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context10.stop();
					}
				}
			}, _callee10, this);
		}));

		function getTestItemList(_x36) {
			return _ref10.apply(this, arguments);
		}

		return getTestItemList;
	}();

	//query testOrder


	_class.prototype.queryOrder = function () {
		var _ref11 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee11(userId) {
			var i, user;
			return _regenerator2.default.wrap(function _callee11$(_context11) {
				while (1) {
					switch (_context11.prev = _context11.next) {
						case 0:

							//删除MAP的内容
							console.log("=======显示map的内容=============");
							for (i in orderMap) {

								console.log(orderMap[i]);
							}
							console.log("========删除map的内容=============");
							orderMap.clear();

							user = _usermgr2.default.getUser(userId);

							if (!(user != null)) {
								_context11.next = 10;
								break;
							}

							this.updatePath(this.serverUrl + '/getTestOrderList?' + 'senderId=' + userId + '&secToken=' + user.secToken + '&queryType=5' + '&userId=' + userId);
							return _context11.abrupt('return', this.sendRequest());

						case 10:
							return _context11.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 11:
						case 'end':
							return _context11.stop();
					}
				}
			}, _callee11, this);
		}));

		function queryOrder(_x37) {
			return _ref11.apply(this, arguments);
		}

		return queryOrder;
	}();

	//query testOrder by orderId


	_class.prototype.queryOrderByOrderId = function () {
		var _ref12 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee12(userId, orderId) {
			var user;
			return _regenerator2.default.wrap(function _callee12$(_context12) {
				while (1) {
					switch (_context12.prev = _context12.next) {
						case 0:
							user = _usermgr2.default.getUser(userId);

							if (!(user != null)) {
								_context12.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/getTestOrderList?' + 'senderId=' + userId + '&secToken=' + user.secToken + '&queryType=1' + '&orderId=' + orderId);
							return _context12.abrupt('return', this.sendRequest());

						case 6:
							return _context12.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context12.stop();
					}
				}
			}, _callee12, this);
		}));

		function queryOrderByOrderId(_x38, _x39) {
			return _ref12.apply(this, arguments);
		}

		return queryOrderByOrderId;
	}();
	//unionpay


	_class.prototype.unionPay = function () {
		var _ref13 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee13(senderId, orderId, amt, frontUrl, backUrl) {
			var user;
			return _regenerator2.default.wrap(function _callee13$(_context13) {
				while (1) {
					switch (_context13.prev = _context13.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context13.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/unionPay?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&orderId=' + orderId + '&amt=' + amt + '&frontUrl=' + frontUrl + '&backUrl=' + backUrl);
							return _context13.abrupt('return', this.sendRequest());

						case 6:
							return _context13.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context13.stop();
					}
				}
			}, _callee13, this);
		}));

		function unionPay(_x40, _x41, _x42, _x43, _x44) {
			return _ref13.apply(this, arguments);
		}

		return unionPay;
	}();

	_class.prototype.unionBill = function () {
		var _ref14 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee14(senderId, encoding, jsonParam) {
			var user, jsonParam2;
			return _regenerator2.default.wrap(function _callee14$(_context14) {
				while (1) {
					switch (_context14.prev = _context14.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);
							jsonParam2 = encodeURIComponent(jsonParam, "UTF-8");

							if (!(user != null)) {
								_context14.next = 7;
								break;
							}

							this.updatePath(this.serverUrl + '/unionBill?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&encoding=' + encoding + '&jsonParam=' + jsonParam2);
							return _context14.abrupt('return', this.sendRequest());

						case 7:
							return _context14.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 8:
						case 'end':
							return _context14.stop();
					}
				}
			}, _callee14, this);
		}));

		function unionBill(_x45, _x46, _x47) {
			return _ref14.apply(this, arguments);
		}

		return unionBill;
	}();

	_class.prototype.unionVerify = function () {
		var _ref15 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee15(senderId, encoding, jsonParam) {
			var user, jsonParam2;
			return _regenerator2.default.wrap(function _callee15$(_context15) {
				while (1) {
					switch (_context15.prev = _context15.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);
							jsonParam2 = encodeURIComponent(jsonParam, "UTF-8");

							if (!(user != null)) {
								_context15.next = 7;
								break;
							}

							this.updatePath(this.serverUrl + '/unionVerify?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&encoding=' + encoding + '&jsonParam=' + jsonParam2);
							return _context15.abrupt('return', this.sendRequest());

						case 7:
							return _context15.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 8:
						case 'end':
							return _context15.stop();
					}
				}
			}, _callee15, this);
		}));

		function unionVerify(_x48, _x49, _x50) {
			return _ref15.apply(this, arguments);
		}

		return unionVerify;
	}();

	//alipay method


	_class.prototype.buildAliPayRequest = function () {
		var _ref16 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee16(senderId, tradeNo, subject, totalFee, body, notifyUrl, returnUrl) {
			var user;
			return _regenerator2.default.wrap(function _callee16$(_context16) {
				while (1) {
					switch (_context16.prev = _context16.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context16.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/buildAliPayRequest?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&tradeNo=' + tradeNo + '&subject=' + subject + '&totalFee=' + totalFee + '&body=' + body + '&notifyUrl=' + notifyUrl + '&returnUrl=' + returnUrl);
							return _context16.abrupt('return', this.sendRequest());

						case 6:
							return _context16.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context16.stop();
					}
				}
			}, _callee16, this);
		}));

		function buildAliPayRequest(_x51, _x52, _x53, _x54, _x55, _x56, _x57) {
			return _ref16.apply(this, arguments);
		}

		return buildAliPayRequest;
	}();

	_class.prototype.aliVerify = function () {
		var _ref17 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee17(senderId, encoding, jsonParam) {
			var user, jsonParam2;
			return _regenerator2.default.wrap(function _callee17$(_context17) {
				while (1) {
					switch (_context17.prev = _context17.next) {
						case 0:

							console.log("========aliVerify start==========");
							user = _usermgr2.default.getUser(senderId);
							jsonParam2 = encodeURIComponent(jsonParam, "UTF-8");

							if (!(user != null)) {
								_context17.next = 8;
								break;
							}

							this.updatePath(this.serverUrl + '/aliVerify?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&encoding=' + encoding + '&jsonParam=' + jsonParam2);
							return _context17.abrupt('return', this.sendRequest());

						case 8:
							return _context17.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 9:
						case 'end':
							return _context17.stop();
					}
				}
			}, _callee17, this);
		}));

		function aliVerify(_x58, _x59, _x60) {
			return _ref17.apply(this, arguments);
		}

		return aliVerify;
	}();

	_class.prototype.aliNotify = function () {
		var _ref18 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee18(orderId, encoding, jsonParam) {
			var order, senderId, senderId2, user, jsonParam2;
			return _regenerator2.default.wrap(function _callee18$(_context18) {
				while (1) {
					switch (_context18.prev = _context18.next) {
						case 0:
							console.log("======aliNotify satrt==================");
							console.log(orderId);
							order = orderMap.get(orderId);

							console.log(order);
							//var senderId1 =  order.userId;
							senderId = order.split(",");
							senderId2 = senderId[1];

							console.log(senderId2);
							user = _usermgr2.default.getUser(senderId2);
							//console.log("========aliNotify start==========");
							//var user = UserMgr.getUser(senderId);

							jsonParam2 = encodeURIComponent(jsonParam, "UTF-8");

							if (!(user != null)) {
								_context18.next = 14;
								break;
							}

							this.updatePath(this.serverUrl + '/aliNotify?' + 'senderId=' + senderId2 + '&secToken=' + user.secToken + '&orderId=' + orderId + '&encoding=' + encoding + '&jsonParam=' + jsonParam2);
							return _context18.abrupt('return', this.sendRequest());

						case 14:
							return _context18.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 15:
						case 'end':
							return _context18.stop();
					}
				}
			}, _callee18, this);
		}));

		function aliNotify(_x61, _x62, _x63) {
			return _ref18.apply(this, arguments);
		}

		return aliNotify;
	}();

	//api interface


	_class.prototype.getDiscPriceList = function () {
		var _ref19 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee19(senderId) {
			var user;
			return _regenerator2.default.wrap(function _callee19$(_context19) {
				while (1) {
					switch (_context19.prev = _context19.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context19.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/getDiscPriceList?' + 'senderId=' + senderId + '&secToken=' + user.secToken);
							return _context19.abrupt('return', this.sendRequest());

						case 6:
							return _context19.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context19.stop();
					}
				}
			}, _callee19, this);
		}));

		function getDiscPriceList(_x64) {
			return _ref19.apply(this, arguments);
		}

		return getDiscPriceList;
	}();

	_class.prototype.addDiscPrice = function () {
		var _ref20 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee20(senderId, promotionCode, itemId, startDate, endDate, price) {
			var user;
			return _regenerator2.default.wrap(function _callee20$(_context20) {
				while (1) {
					switch (_context20.prev = _context20.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context20.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/addDiscPrice?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&promotionCode=' + promotionCode + '&itemId=' + itemId + '&startDate=' + startDate + '&endDate=' + endDate + '&price=' + price);
							return _context20.abrupt('return', this.sendRequest());

						case 6:
							return _context20.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context20.stop();
					}
				}
			}, _callee20, this);
		}));

		function addDiscPrice(_x65, _x66, _x67, _x68, _x69, _x70) {
			return _ref20.apply(this, arguments);
		}

		return addDiscPrice;
	}();

	_class.prototype.updDiscPrice = function () {
		var _ref21 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee21(senderId, id, promotionCode, itemId, startDate, endDate, price) {
			var user;
			return _regenerator2.default.wrap(function _callee21$(_context21) {
				while (1) {
					switch (_context21.prev = _context21.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context21.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/updDiscPrice?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&id=' + id + '&promotionCode=' + promotionCode + '&itemId=' + itemId + '&startDate=' + startDate + '&endDate=' + endDate + '&price=' + price);
							return _context21.abrupt('return', this.sendRequest());

						case 6:
							return _context21.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context21.stop();
					}
				}
			}, _callee21, this);
		}));

		function updDiscPrice(_x71, _x72, _x73, _x74, _x75, _x76, _x77) {
			return _ref21.apply(this, arguments);
		}

		return updDiscPrice;
	}();

	_class.prototype.deletePrice = function () {
		var _ref22 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee22(senderId, id) {
			var user;
			return _regenerator2.default.wrap(function _callee22$(_context22) {
				while (1) {
					switch (_context22.prev = _context22.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context22.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/deletePrice?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&id=' + id);
							return _context22.abrupt('return', this.sendRequest());

						case 6:
							return _context22.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context22.stop();
					}
				}
			}, _callee22, this);
		}));

		function deletePrice(_x78, _x79) {
			return _ref22.apply(this, arguments);
		}

		return deletePrice;
	}();

	_class.prototype.getCurrentPrice = function () {
		var _ref23 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee23(itemId, promCode) {
			return _regenerator2.default.wrap(function _callee23$(_context23) {
				while (1) {
					switch (_context23.prev = _context23.next) {
						case 0:
							//var user = UserMgr.getUser(senderId);
							//if(user != null){
							//console.log(-------------"getCurrentPrice"---------);
							console.log(itemId + "|" + promCode);
							this.updatePath(this.serverUrl + '/getCurrentPrice?' + 'senderId=' + '&secToken=' + '&itemId=' + itemId + '&promotionCode=' + promCode);
							return _context23.abrupt('return', this.sendRequest());

						case 3:
						case 'end':
							return _context23.stop();
					}
				}
			}, _callee23, this);
		}));

		function getCurrentPrice(_x80, _x81) {
			return _ref23.apply(this, arguments);
		}

		return getCurrentPrice;
	}();

	_class.prototype.getPersonCurrentPrice = function () {
		var _ref24 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee24(senderId, itemId, promCode) {
			var user;
			return _regenerator2.default.wrap(function _callee24$(_context24) {
				while (1) {
					switch (_context24.prev = _context24.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context24.next = 7;
								break;
							}

							//console.log(-------------"getCurrentPrice"---------);
							console.log(itemId + "|" + promCode);
							this.updatePath(this.serverUrl + '/getCurrentPrice?' + 'senderId=' + '&secToken=' + '&itemId=' + itemId + '&promotionCode=' + promCode);
							return _context24.abrupt('return', this.sendRequest());

						case 7:
							return _context24.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 8:
						case 'end':
							return _context24.stop();
					}
				}
			}, _callee24, this);
		}));

		function getPersonCurrentPrice(_x82, _x83, _x84) {
			return _ref24.apply(this, arguments);
		}

		return getPersonCurrentPrice;
	}();

	_class.prototype.getDiscPriceList = function () {
		var _ref25 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee25(senderId) {
			var user;
			return _regenerator2.default.wrap(function _callee25$(_context25) {
				while (1) {
					switch (_context25.prev = _context25.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context25.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/getDiscPriceList?' + 'senderId=' + senderId + '&secToken=' + user.secToken);
							return _context25.abrupt('return', this.sendRequest());

						case 6:
							return _context25.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context25.stop();
					}
				}
			}, _callee25, this);
		}));

		function getDiscPriceList(_x85) {
			return _ref25.apply(this, arguments);
		}

		return getDiscPriceList;
	}();

	_class.prototype.addCustomer = function () {
		var _ref26 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee26(senderId, name, phone, email) {
			var user;
			return _regenerator2.default.wrap(function _callee26$(_context26) {
				while (1) {
					switch (_context26.prev = _context26.next) {
						case 0:

							console.log("---------addCustomer test---------------");
							console.log(senderId);
							user = _usermgr2.default.getUser(senderId);

							console.log(user);

							if (!(user != null)) {
								_context26.next = 9;
								break;
							}

							this.updatePath(this.serverUrl + '/addCustomer?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&name=' + name + '&type=2' + '&age=0' + '&contactPhone=' + phone + '&clDiagnosis=' + '&email=' + '&idType=1' + '&idNumber=' + '&heigh=0' + '&weight=0' + '&tnmStage=M0');
							return _context26.abrupt('return', this.sendRequest());

						case 9:
							return _context26.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 10:
						case 'end':
							return _context26.stop();
					}
				}
			}, _callee26, this);
		}));

		function addCustomer(_x86, _x87, _x88, _x89) {
			return _ref26.apply(this, arguments);
		}

		return addCustomer;
	}();

	_class.prototype.getCustomerDetail = function () {
		var _ref27 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee27(senderId, custId) {
			var user;
			return _regenerator2.default.wrap(function _callee27$(_context27) {
				while (1) {
					switch (_context27.prev = _context27.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);

							if (!(user != null)) {
								_context27.next = 6;
								break;
							}

							this.updatePath(this.serverUrl + '/getCustomerDetail?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&id=' + custId);
							return _context27.abrupt('return', this.sendRequest());

						case 6:
							return _context27.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 7:
						case 'end':
							return _context27.stop();
					}
				}
			}, _callee27, this);
		}));

		function getCustomerDetail(_x90, _x91) {
			return _ref27.apply(this, arguments);
		}

		return getCustomerDetail;
	}();

	_class.prototype.addTestOrder = function () {
		var _ref28 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee28(senderId, customerId, testItem, phoneNumber, recvContactInfo, reptReceiver, orderAmt, recvAddress, notes, promCode) {
			var user, recvAddress1, reptReceiver1, notes1, tod, path;
			return _regenerator2.default.wrap(function _callee28$(_context28) {
				while (1) {
					switch (_context28.prev = _context28.next) {
						case 0:
							user = _usermgr2.default.getUser(senderId);
							recvAddress1 = encodeURIComponent(recvAddress, 'UTF-8');
							reptReceiver1 = encodeURIComponent(reptReceiver, 'UTF-8');
							notes1 = encodeURIComponent(notes, 'UTF-8');

							if (!(user != null)) {
								_context28.next = 18;
								break;
							}

							tod = new Date();
							path = this.serverUrl + '/addTestOrder?' + 'senderId=' + senderId + '&secToken=' + user.secToken + '&customerId=' + customerId + '&testItem=' + testItem + '&sendDate=' + this.format(tod)
							//  encodeURIComponent(tod.toDateString())
							+ '&testType=2&orderStatus=6&needReturn=true';


							if (phoneNumber != null) {
								path += '&phoneNumber=' + phoneNumber;
							}
							if (recvContactInfo != null) {
								path += '&recvContactInfo=' + recvContactInfo;
							}
							if (reptReceiver != null) {
								path += '&reptReceiver=' + reptReceiver1;
							}
							if (orderAmt != null) {
								path += '&orderAmt=' + orderAmt;
							}
							if (recvAddress != null) {
								path += '&recvAddress=' + recvAddress1;
							}
							if (notes != null) {
								path += '&notes=' + notes1;
							}
							if (promCode != null) {
								path += '&promCode=' + promCode;
							}
							this.updatePath(path);
							return _context28.abrupt('return', this.sendRequest());

						case 18:
							return _context28.abrupt('return', this.localError({ "errorCode": 100, "errorMsg": "用户没有登录" }));

						case 19:
						case 'end':
							return _context28.stop();
					}
				}
			}, _callee28, this);
		}));

		function addTestOrder(_x92, _x93, _x94, _x95, _x96, _x97, _x98, _x99, _x100, _x101) {
			return _ref28.apply(this, arguments);
		}

		return addTestOrder;
	}();

	_class.prototype.format = function format(date) {
		date = new Date(date);

		var day = ('0' + date.getDate()).slice(-2);
		var month = ('0' + (date.getMonth() + 1)).slice(-2);
		var year = date.getFullYear();

		return year + '-' + month + '-' + day;
	};

	_class.prototype.test = function () {
		var _ref29 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee29() {
			return _regenerator2.default.wrap(function _callee29$(_context29) {
				while (1) {
					switch (_context29.prev = _context29.next) {
						case 0:
							return _context29.abrupt('return', this.postRequest("/back/test", "{'d1':'1'}, {'a1':'2'}"));

						case 1:
						case 'end':
							return _context29.stop();
					}
				}
			}, _callee29, this);
		}));

		function test() {
			return _ref29.apply(this, arguments);
		}

		return test;
	}();

	//存储订单apli支付信息的
	_class.setOrder = function setOrder(orderInfo) {
		var orderId = orderInfo.orderId;
		var userId = orderInfo.userId;
		console.log(orderInfo.orderId + "|" + orderInfo.userId + "|||");
		console.log("[type]" + (typeof userId === 'undefined' ? 'undefined' : (0, _typeof3.default)(userId)));
		if (orderId != null && typeof orderId == "number") {
			orderId = "" + orderId;
		}
		orderMap.set(orderId, userId);
	};

	_class.getOrder = function getOrder(orderId) {
		var u = orderMap.get(orderId);
		console.log("|" + u.orderId + "|" + u.userId + "--");
		return u;
	};

	return _class;
}(_connbase2.default);

exports.default = _class;
//# sourceMappingURL=bizmgr.js.map