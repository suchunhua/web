'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _base = require('./base.js');

var _base2 = _interopRequireDefault(_base);

var _bizmgr = require('../connect/bizmgr.js');

var _bizmgr2 = _interopRequireDefault(_bizmgr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mgr = new _bizmgr2.default();

var _class = function (_Base) {
  (0, _inherits3.default)(_class, _Base);

  function _class() {
    (0, _classCallCheck3.default)(this, _class);
    return (0, _possibleConstructorReturn3.default)(this, _Base.apply(this, arguments));
  }

  /**
   * index action
   * @return {Promise} []
   */
  _class.prototype.indexAction = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
      var ceo, boss, science;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.model('boss').where({ type: 0 }).find();

            case 2:
              ceo = _context.sent;
              _context.next = 5;
              return this.model('boss').where({ type: 1 }).find();

            case 5:
              boss = _context.sent;
              _context.next = 8;
              return this.model('science_advisor').where({ isdelete: 0 }).select();

            case 8:
              science = _context.sent;


              /*
              let pm = await mgr.getDiscPriceList(1)
              .then( function (result) { 
              for(let j in result.discList){
              var elm = result.discList[j];
              console.log(elm);				
              }
              },   
              function (error) {   
               console.log(error);   
              });
              
              let pm = await mgr.addTestOrder(79, 97, "1,1", "13977665555", "xx", "zj")
              .then( function (result) {
              return result;
              },   
              function (error) {   
               console.log(error);   
              });
              */
              /*
              var jsobj = new Object();
              jsobj.a1="a1";
              jsobj.f1="f1";
              jsobj.s1="s1";
              
              var str = JSON.stringify(jsobj);
              console.log("BBB: "+str);
              */

              this.assign('ceo', ceo);
              this.assign('boss', boss);
              this.assign('science', science);

              return _context.abrupt('return', this.display());

            case 13:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function indexAction() {
      return _ref.apply(this, arguments);
    }

    return indexAction;
  }();

  return _class;
}(_base2.default);

exports.default = _class;
//# sourceMappingURL=about.js.map