{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\home\\connect\\connbase.js"
    ],
    "names": [
        "http",
        "require",
        "optionsget",
        "host",
        "port",
        "path",
        "method",
        "optionsPost",
        "headers",
        "Buffer",
        "byteLength",
        "withJson",
        "recvData",
        "updatePath",
        "sendRequest",
        "promise",
        "resolve",
        "reject",
        "console",
        "info",
        "reqGet",
        "request",
        "res",
        "on",
        "d",
        "log",
        "toString",
        "retjson",
        "JSON",
        "parse",
        "ex",
        "end",
        "e",
        "error",
        "postRequest",
        "data",
        "reqPost",
        "da",
        "Object",
        "a1",
        "a2",
        "str",
        "write",
        "localError"
    ],
    "mappings": ";;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA;AACA,IAAIC,aAAa;AAChB;AACA;AACA;AACA;;AAEAC,OAAM,eANU;AAOhBC,OAAK,IAPW;AAQhB;AACAC,OAAO,EATS;AAUhBC,SAAS,KAVO,CAUD;AAVC,CAAjB;;AAaA;AACA,IAAIC,cAAc;AACjBJ,OAAO,WADU,EACG;AACpBC,OAAO,IAFU;AAGjBC,OAAM,EAHW;AAIjB;AACAC,SAAS,MALQ;AAMjBE,UAAS;AACJ,kBAAgB,mCADZ;AAEJ,oBAAkBC,OAAOC,UAAP,CAAkB,oBAAlB;AAFd;;AANQ,CAAlB;;AAaA,IAAIC,WAAW,4BAAf;AACA,IAAIC,WAAW,EAAf;;;;;;;kBAKCC,U,uBAAWR,I,EAAK;AACfH,aAAWG,IAAX,GAAkBA,IAAlB;AACA,E;;kBAEDS,W,0BAAa;AACZF,aAAW,EAAX;AACA,MAAIG,UAAU,sBAAa,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACpDf,cAAWG,IAAX,GAAkBH,WAAWG,IAAX,GAAkBM,QAApC;AACA;AACAO,WAAQC,IAAR,CAAajB,UAAb;AACA;AACA;AACA,OAAIkB,SAASpB,KAAKqB,OAAL,CAAanB,UAAb,EAAyB,UAASoB,GAAT,EAAc;AACnD;AACA;AACA;AACAA,QAAIC,EAAJ,CAAO,MAAP,EAAe,UAASC,CAAT,EAAY;;AAE1B;AACA;AACA;AACA;AACAN,aAAQO,GAAR,CAAYD,EAAEE,QAAF,EAAZ;AACAd,iBAAYY,EAAEE,QAAF,EAAZ;AAEA,KATD;;AAWAJ,QAAIC,EAAJ,CAAO,KAAP,EAAc,YAAW;AACxB,SAAG;AACFL,cAAQO,GAAR,CAAY,UAAUb,SAASc,QAAT,EAAtB;AACA,UAAIC,UAAUC,KAAKC,KAAL,CAAWjB,SAASc,QAAT,EAAX,CAAd;AACAV,cAAQW,OAAR;AACA,MAJD,CAKA,OAAMG,EAAN,EAAS;AACRb,aAAO,EAAE,aAAc,GAAhB,EAAqB,YAAa,iBAAlC,EAAP;AACA;AACD,KATD;AAUA,IAzBY,CAAb;AA0BAG,UAAOW,GAAP,CAAW,YAAW;AACrB;AACA,IAFD;AAGAX,UAAOG,EAAP,CAAU,OAAV,EAAmB,UAASS,CAAT,EAAY;AAC9Bd,YAAQe,KAAR,CAAcD,CAAd;AACAf,WAAOe,CAAP;AACA,IAHD;AAIC,GAvCY,CAAd;AAwCC,SAAOjB,OAAP;AACD,E;;kBAEDmB,W,wBAAY7B,I,EAAM8B,I,EAAK;AACtBvB,aAAW,EAAX;AACA,MAAIG,UAAU,sBAAa,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACpDV,eAAYF,IAAZ,GAAmBA,IAAnB;AACA;AACA;AACA,OAAI+B,UAAUpC,KAAKqB,OAAL,CAAad,WAAb,EAA0B,UAASe,GAAT,EAAc;AACrDA,QAAIC,EAAJ,CAAO,MAAP,EAAe,UAASC,CAAT,EAAY;AAC1BN,aAAQO,GAAR,CAAYD,EAAEE,QAAF,EAAZ;AACAd,iBAAYY,EAAEE,QAAF,EAAZ;AAEA,KAJD;;AAMAJ,QAAIC,EAAJ,CAAO,KAAP,EAAc,YAAW;AACxB,SAAG;AACFL,cAAQO,GAAR,CAAY,UAAUb,SAASc,QAAT,EAAtB;AACA,UAAIC,UAAUC,KAAKC,KAAL,CAAWjB,SAASc,QAAT,EAAX,CAAd;AACAV,cAAQW,OAAR;AACA,MAJD,CAKA,OAAMG,EAAN,EAAS;AACRb,aAAO,EAAE,aAAc,GAAhB,EAAqB,YAAa,iBAAlC,EAAP;AACA;AACD,KATD;AAUA,IAjBa,CAAd;;AAmBAmB,WAAQb,EAAR,CAAW,OAAX,EAAoB,UAASS,CAAT,EAAY;AAC/Bd,YAAQe,KAAR,CAAcD,CAAd;AACAf,WAAOe,CAAP;AACA,IAHD;;AAKA,OAAIK,KAAK,IAAIC,MAAJ,EAAT;AACAD,MAAGE,EAAH,GAAM,CAAN;AACAF,MAAGG,EAAH,GAAM,CAAN;AACA,OAAIC,MAAM,yBAAeJ,EAAf,CAAV;AACAnB,WAAQO,GAAR,CAAY,WAAWgB,GAAvB;;AAEAL,WAAQM,KAAR,CAAcD,GAAd;;AAEAL,WAAQL,GAAR,CAAY,YAAW;AACtB;AACA,IAFD;AAGC,GAvCY,CAAd;AAwCC,SAAOhB,OAAP;AACD,E;;kBAED4B,U,uBAAWV,K,EAAM;AAChB,MAAIlB,UAAU,sBAAa,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACpDA,UAAOgB,KAAP;AACA,GAFa,CAAd;AAGA,SAAOlB,OAAP;AACA;AACA,E",
    "file": "..\\..\\..\\src\\home\\connect\\connbase.js",
    "sourcesContent": [
        "var http = require('http'); \r\n\r\n// options for GET \r\nvar optionsget = { \r\n\t//host : 'localhost', // here only the domain name \r\n\t//host: '120.26.217.50',\r\n\t//host: '192.168.2.21',\r\n\t/*host:'192.168.2.151',\r\n\tport : 8080,*/\r\n\thost: '121.40.55.125',\r\n\tport:9080,\r\n\t//(no http/https !) \r\n\tpath : '', \r\n\tmethod : 'GET' // do GET \r\n}; \r\n\r\n//options for POST \r\nvar optionsPost = { \r\n\thost : 'localhost', // here only the domain name \r\n\tport : 8360, \r\n\tpath: '',\r\n\t//data : '{\"d1\":1}, {\"a1\":2}', \r\n\tmethod : 'POST',\r\n\theaders: {\r\n\t\t    'Content-Type': 'application/x-www-form-urlencoded',\r\n\t\t    'Content-Length': Buffer.byteLength('{\"d1\":1}, {\"a1\":2}')\r\n\t\t  }\r\n\t\r\n}; \r\n\r\nvar withJson = '&response=application/json';\r\nvar recvData = '';\r\n\r\nexport default class {\r\n\t\r\n\t\r\n\tupdatePath(path){\r\n\t\toptionsget.path = path;\r\n\t}\r\n\t\r\n\tsendRequest(){\t\r\n\t\trecvData = '';\r\n\t\tvar promise = new Promise( function(resolve, reject) {  \r\n\t\t\toptionsget.path = optionsget.path + withJson;\r\n\t\t\t//console.info('Options prepared:'); \r\n\t\t\tconsole.info(optionsget); \r\n\t\t\t//console.info('Do the GET call'); \r\n\t\t\t// do the GET request \r\n\t\t\tvar reqGet = http.request(optionsget, function(res) { \r\n\t\t\t\t//console.log(\"statusCode: \", res.statusCode); \r\n\t\t\t\t// uncomment it for header details \r\n\t\t\t\t//console.log(\"headers: \", res.headers); \r\n\t\t\t\tres.on('data', function(d) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t//console.info('GET result:\\n'); \r\n\t\t\t\t\t//process.stdout.write(d); \r\n\t\t\t\t\t//console.log(JSON.stringify(d));\r\n\t\t\t\t\t//console.info('\\n\\nCall completed'); \r\n\t\t\t\t\tconsole.log(d.toString());\r\n\t\t\t\t\trecvData += d.toString();\r\n\t\t\t\t\t \r\n\t\t\t\t}); \r\n\t\t\t\t\r\n\t\t\t\tres.on('end', function() {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tconsole.log(\"END: \" + recvData.toString());\r\n\t\t\t\t\t\tvar retjson = JSON.parse(recvData.toString());\r\n\t\t\t\t\t\tresolve(retjson);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex){\r\n\t\t\t\t\t\treject({ \"errorCode\" : 101, \"errorMsg\" : \"Invalid request\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}); \r\n\t\t\treqGet.end(function() {\r\n\t\t\t\t//console.log(\"END2\");\r\n\t\t\t}); \r\n\t\t\treqGet.on('error', function(e) { \r\n\t\t\t\tconsole.error(e); \r\n\t\t\t\treject(e);\r\n\t\t\t});\r\n\t\t });\r\n\t\t return promise;\r\n\t};\r\n\r\n\tpostRequest(path, data){\t\r\n\t\trecvData = '';\r\n\t\tvar promise = new Promise( function(resolve, reject) {  \r\n\t\t\toptionsPost.path = path;\r\n\t\t\t//optionsPost.data = data;\r\n\t\t\t//console.info(\"[postRequest] \" + optionsPost.data); \r\n\t\t\tvar reqPost = http.request(optionsPost, function(res) { \r\n\t\t\t\tres.on('data', function(d) {\r\n\t\t\t\t\tconsole.log(d.toString());\r\n\t\t\t\t\trecvData += d.toString();\r\n\t\t\t\t\t \r\n\t\t\t\t}); \r\n\t\t\t\t\r\n\t\t\t\tres.on('end', function() {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tconsole.log(\"END: \" + recvData.toString());\r\n\t\t\t\t\t\tvar retjson = JSON.parse(recvData.toString());\r\n\t\t\t\t\t\tresolve(retjson);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(ex){\r\n\t\t\t\t\t\treject({ \"errorCode\" : 101, \"errorMsg\" : \"Invalid request\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}); \r\n\r\n\t\t\treqPost.on('error', function(e) { \r\n\t\t\t\tconsole.error(e); \r\n\t\t\t\treject(e);\r\n\t\t\t});\r\n\r\n\t\t\tvar da = new Object();\r\n\t\t\tda.a1=2;\r\n\t\t\tda.a2=3;\r\n\t\t\tvar str = JSON.stringify(da);\r\n\t\t\tconsole.log(\"str = \" + str);\r\n\t\t\t\r\n\t\t\treqPost.write(str);\r\n\t\t\t\r\n\t\t\treqPost.end(function() {\r\n\t\t\t\t//console.log(\"END2\");\r\n\t\t\t}); \r\n\t\t });\r\n\t\t return promise;\r\n\t};\r\n\r\n\tlocalError(error){\r\n\t\tvar promise = new Promise( function(resolve, reject) { \r\n\t\t\treject(error);\r\n\t\t});\r\n\t\treturn promise;\r\n\t\t//return Error(error);\r\n\t};\r\n}\r\n"
    ]
}