'use strict';

exports.__esModule = true;

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _base = require('./base.js');

var _base2 = _interopRequireDefault(_base);

var _usermgr = require('../connect/usermgr.js');

var _usermgr2 = _interopRequireDefault(_usermgr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mgr = new _usermgr2.default();
var errorCode = 0;

var http = require('http');

var _class = function (_Base) {
  (0, _inherits3.default)(_class, _Base);

  function _class() {
    (0, _classCallCheck3.default)(this, _class);
    return (0, _possibleConstructorReturn3.default)(this, _Base.apply(this, arguments));
  }

  _class.prototype.indexAction = function indexAction() {
    var action = this.get('action');
    console.log(action);

    this.assign('action', action);
    return this.display();
  };

  //user login method 


  _class.prototype.loginAction = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
      var pm, pm1;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!this.isGet()) {
                _context.next = 2;
                break;
              }

              return _context.abrupt('return', this.display());

            case 2:
              console.log("=======loginAction start=======");
              console.log("[loginAction] " + this.post());

              console.log(this.post().username + "|" + this.post().password);
              this.cookie("username", this.post().username);

              if (!(this.post().username == null || this.post().username == '')) {
                _context.next = 11;
                break;
              }

              console.log("test loginAction");
              return _context.abrupt('return', this.display());

            case 11:
              _context.next = 13;
              return mgr.login(this.post().username, this.post().password).then(function (result) {
                console.log(result);
                _usermgr2.default.setUser(result);
                console.log("-------------------");

                if (result.errorCode == 0) {
                  errorCode = result.errorCode;
                  console.log(errorCode);
                  return result;
                } else {
                  errorCode = result.errorCode;
                  return result;
                }
                //get user information method
              }, function (error) {
                console.log(error);
              });

            case 13:
              pm = _context.sent;

              if (!(errorCode == 0)) {
                _context.next = 36;
                break;
              }

              this.assign("pm", pm);
              console.log(pm);
              console.log("=========get getuser params===========");
              console.log(pm);
              _context.next = 21;
              return mgr.getUser("" + pm.userId, pm.userId).then(function (result) {
                return result;
              });

            case 21:
              pm1 = _context.sent;

              console.log("---------cookie params--------");
              console.log(pm1);

              this.cookie("phone", pm1.user.phone);
              this.cookie("email", pm1.user.email);
              this.cookie("name", pm1.user.name);
              this.cookie('userId', pm.userId);
              this.cookie('role', pm1.user.userRoles);
              // return this.display('home:index:index');
              // return this.redirect('/user/userlist');

              if (!(pm1.user.userRoles == 'admin')) {
                _context.next = 33;
                break;
              }

              return _context.abrupt('return', this.redirect('/back/userlist'));

            case 33:
              return _context.abrupt('return', this.redirect('/index/index'));

            case 34:
              _context.next = 41;
              break;

            case 36:
              this.assign("pm", pm);
              console.log("======login fail==========");
              if (pm.errorCode == 1002) {
                this.assign("loginmsg", "用户名不存在");
              } else if (pm.errorCode == 1001) {
                this.assign("loginmsg", "用户名密码错误");
              } else {
                this.assign("loginmsg", "其他错误请稍后再试。。。。。");
              }
              console.log(pm);
              return _context.abrupt('return', this.display());

            case 41:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function loginAction() {
      return _ref.apply(this, arguments);
    }

    return loginAction;
  }();

  //register method  


  _class.prototype.registerAction = function () {
    var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {
      var userinfor, username, password, realName, email, phoneNum, code, pm, pmc;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!this.isGet()) {
                _context2.next = 2;
                break;
              }

              return _context2.abrupt('return', this.display());

            case 2:
              //user infor params
              //try{

              userinfor = this.post();

              console.log(userinfor);
              console.log("====================");
              username = this.post('username');
              password = this.post('password');
              realName = this.post('realName');
              email = this.post('email');

              console.log(username + "|||" + email);

              //verification params
              phoneNum = this.post('phoneNum');
              code = this.post('code');

              if (!(code == null || code == "")) {
                _context2.next = 16;
                break;
              }

              return _context2.abrupt('return', this.display());

            case 16:
              console.log("----------verificationcodeAction start -----------");
              _context2.next = 19;
              return mgr.verificationCode(phoneNum, code).then(function (result) {
                console.log(result);
                //this.assign("result",result);
                return result;
              });

            case 19:
              pm = _context2.sent;

              if (!(pm.errorCode == 0)) {
                _context2.next = 36;
                break;
              }

              console.log("----------createUser start -----------");
              _context2.next = 24;
              return mgr.createUser(username, password, realName, email, phoneNum).then(function (result) {
                // console.log(result);
                return result;
              });

            case 24:
              pmc = _context2.sent;

              console.log("--------------------------");
              console.log(pmc);
              console.log(typeof pmc === 'undefined' ? 'undefined' : (0, _typeof3.default)(pmc));
              this.assign("pm1", pmc);

              if (!(pmc.errorCode == 1104)) {
                _context2.next = 33;
                break;
              }

              this.error("msg", "用户名已被注册,请返回");
              _context2.next = 34;
              break;

            case 33:
              return _context2.abrupt('return', this.display("home:user:login"));

            case 34:
              _context2.next = 39;
              break;

            case 36:
              this.assign("userinfor", userinfor);
              this.assign("msg", "验证码输入错误");
              return _context2.abrupt('return', this.display());

            case 39:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function registerAction() {
      return _ref2.apply(this, arguments);
    }

    return registerAction;
  }();

  _class.prototype.registerphoneAction = function () {
    var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3() {
      var userinfor, pm, _pm;

      return _regenerator2.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:

              console.log("======registerphoneAction start==============");
              userinfor = this.post();

              console.log(userinfor);
              this.assign("userinfor", userinfor);

              console.log(userinfor.phoneNum);
              _context3.prev = 5;
              _context3.next = 8;
              return mgr.phoneTest(userinfor.phoneNum).then(function (result) {
                console.log(result);
                //this.assign("result",result);
                return result;
              });

            case 8:
              pm = _context3.sent;


              console.log(pm);

              if (!(pm.userList != null)) {
                _context3.next = 14;
                break;
              }

              //this.assign("phone",phone.phone1);
              //this.assign("username",pm.userList[0].name);
              this.assign("msg", "电话号码已注册");

              _context3.next = 19;
              break;

            case 14:
              //this.assign("phone",phone.phone1);
              this.assign("msg", "电话号码可以注册(手机验证码发到手机5分钟以内不能再获取)");
              console.log("----------sendShortMsgCodeAction  start-----------");
              _context3.next = 18;
              return mgr.sendShortMsgCode(0, 0, userinfor.phoneNum).then(function (result) {
                //console.log(result);
                return result;
              });

            case 18:
              _pm = _context3.sent;

            case 19:
              return _context3.abrupt('return', this.display("user:register"));

            case 22:
              _context3.prev = 22;
              _context3.t0 = _context3['catch'](5);
              return _context3.abrupt('return', this.display("user:register"));

            case 25:
            case 'end':
              return _context3.stop();
          }
        }
      }, _callee3, this, [[5, 22]]);
    }));

    function registerphoneAction() {
      return _ref3.apply(this, arguments);
    }

    return registerphoneAction;
  }();

  _class.prototype.passwordAction = function () {
    var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {
      var infor, pm;
      return _regenerator2.default.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.prev = 0;
              infor = this.post();

              console.log("-------passwordAction---verificationcodeAction start -----------");
              console.log(infor);
              _context4.next = 6;
              return mgr.updatePassword(infor.username, infor.password, infor.phone, infor.code).then(function (result) {

                console.log(result);
                return result;
              });

            case 6:
              pm = _context4.sent;

              console.log(pm);

              if (!(pm.errorCode == 0)) {
                _context4.next = 10;
                break;
              }

              return _context4.abrupt('return', this.display("user:login"));

            case 10:
              return _context4.abrupt('return', this.display());

            case 13:
              _context4.prev = 13;
              _context4.t0 = _context4['catch'](0);
              return _context4.abrupt('return', this.display());

            case 16:
            case 'end':
              return _context4.stop();
          }
        }
      }, _callee4, this, [[0, 13]]);
    }));

    function passwordAction() {
      return _ref4.apply(this, arguments);
    }

    return passwordAction;
  }();

  // password find send msg


  _class.prototype.passwordsendmsgAction = function () {
    var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5() {
      var phone, pm;
      return _regenerator2.default.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:

              console.log("========passwordsendmsgAction=========");
              phone = this.post("phone");


              console.log(phone);

              _context5.next = 5;
              return mgr.sendShortMsgCode(0, 0, phone).then(function (result) {
                //console.log(result);
                return result;
              });

            case 5:
              pm = _context5.sent;

              console.log("-----------------------");
              console.log(pm);

              // return this.redirect("/user/password");
              return _context5.abrupt('return', this.display());

            case 9:
            case 'end':
              return _context5.stop();
          }
        }
      }, _callee5, this);
    }));

    function passwordsendmsgAction() {
      return _ref5.apply(this, arguments);
    }

    return passwordsendmsgAction;
  }();

  _class.prototype.testAction = function () {
    var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6() {
      var phone, pm;
      return _regenerator2.default.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              phone = this.post();

              // this.assign("msg",phone.phone1);

              console.log(phone);
              _context6.prev = 2;
              _context6.next = 5;
              return mgr.phoneTest(phone.phone1).then(function (result) {
                console.log(result);
                //this.assign("result",result);
                return result;
              });

            case 5:
              pm = _context6.sent;


              console.log(pm.userList);

              if (pm.userList != null) {
                if (phone == null) {
                  this.assign("msg", "");
                } else {
                  this.assign("phone", phone.phone1);
                  this.assign("username", pm.userList.name);
                  // this.assign("msg","电话号码存在");
                }
              } else {
                this.assign("phone", phone.phone1);
                this.assign("msg", "电话号码不存在");
              }
              /*if(pm.userList[0].phone!=phone.phone1){
                 console.log("success");
                 //this.assign("phone",infor.phone);
                // this.assign("msg","电话号码存在");
                 this.assign("msg","电话号码不存在，请注册");
               }else {
                this.assign("msg","电话号码存在");
               // this.assign("msg","电话号码不存在，请注册");
               }*/
              //return this.redirect("/user/password");
              return _context6.abrupt('return', this.display("user:password"));

            case 11:
              _context6.prev = 11;
              _context6.t0 = _context6['catch'](2);
              return _context6.abrupt('return', this.display("user:password"));

            case 14:
            case 'end':
              return _context6.stop();
          }
        }
      }, _callee6, this, [[2, 11]]);
    }));

    function testAction() {
      return _ref6.apply(this, arguments);
    }

    return testAction;
  }();

  _class.prototype.passwordcodeAction = function () {
    var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7() {
      var infor, pm;
      return _regenerator2.default.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              console.log("====passwordcodeAction start===========");
              infor = this.post();

              console.log(infor);
              _context7.prev = 3;
              _context7.next = 6;
              return mgr.verificationCode(infor.phone, infor.code).then(function (result) {

                console.log(result);
                return result;
              }, function (error) {
                console.log(error);
              });

            case 6:
              pm = _context7.sent;

              console.log(pm);

              if (pm.errorCode == 0) {
                this.assign("msg", "验证码正确");
                this.assign("phone", infor.phone);
                this.assign("username", infor.username);
                this.assign("code", infor.code);
              } else {
                this.assign("msg", "验证码错误");
                //this.assign("infor",infor);
                this.assign("phone", infor.phone);
                this.assign("code", infor.code);
              }

              return _context7.abrupt('return', this.display("user:password"));

            case 12:
              _context7.prev = 12;
              _context7.t0 = _context7['catch'](3);

            case 14:
            case 'end':
              return _context7.stop();
          }
        }
      }, _callee7, this, [[3, 12]]);
    }));

    function passwordcodeAction() {
      return _ref7.apply(this, arguments);
    }

    return passwordcodeAction;
  }();

  //获得用户列表的方法


  _class.prototype.userlistAction = function () {
    var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8() {
      var userId, pm, j, elm;
      return _regenerator2.default.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              userId = this.cookie('userId');

              console.log("[userlistAction] " + userId);
              _context8.next = 4;
              return mgr.getUserList(userId, "").then(function (result) {
                //process.stdout.write(result);
                //console.log(result.toString()); 
                //var ret = JSON.parse(result.toString());

                return result;
              }, function (error) {
                console.log(error);
              });

            case 4:
              pm = _context8.sent;


              for (j in pm.userList) {
                elm = pm.userList[j];

                console.log(elm.userId + "|" + elm.name + "|" + elm.password);
                this.assign('elm', elm);
                this.assign('userList', pm.userList);
              }

              return _context8.abrupt('return', this.display());

            case 7:
            case 'end':
              return _context8.stop();
          }
        }
      }, _callee8, this);
    }));

    function userlistAction() {
      return _ref8.apply(this, arguments);
    }

    return userlistAction;
  }();
  // login verification method 


  _class.prototype.loginverificatAction = function () {
    var _ref9 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee9() {
      var infor, username, password1, pm, tod;
      return _regenerator2.default.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              _context9.prev = 0;
              infor = this.get('infor');
              username = this.get('username');
              password1 = this.get('password1');

              console.log(username + "||" + password1);
              console.log(infor);
              console.log("------------------------------------");
              errorCode = 0;
              //let pm = await mgr.login('root', 'e946b69705089bb7')
              _context9.next = 10;
              return mgr.login(username, password1).then(function (result) {
                //process.stdout.write(result);
                if (result.errorCode == 0) {
                  console.log(result.userId + "|" + result.secToken);
                  _usermgr2.default.setUser(result);
                  //userinfo = result;
                  return result;

                  //console.log("ret : " + userinfo.userId + "|" + userinfo.secToken);
                } else {
                  errorCode = result.errorCode;
                  //console.log("ret : " + result.errorCode + "|" + result.errorMsg);
                }
              }, function (error) {
                errorCode = error.errorCode;
                console.log(error);
              });

            case 10:
              pm = _context9.sent;
              tod = new Date();

              console.log("today : " + tod.toString() + "|" + tod.toDateString());

              if (!(errorCode == 0)) {
                _context9.next = 17;
                break;
              }

              return _context9.abrupt('return', this.redirect('/user/userlist'));

            case 17:
              console.log(pm);
              console.log("---------------------");
              this.assign('user', pm);
              return _context9.abrupt('return', this.display('home:user:login'));

            case 21:
              _context9.next = 26;
              break;

            case 23:
              _context9.prev = 23;
              _context9.t0 = _context9['catch'](0);

              console.log(_context9.t0);

            case 26:
            case 'end':
              return _context9.stop();
          }
        }
      }, _callee9, this, [[0, 23]]);
    }));

    function loginverificatAction() {
      return _ref9.apply(this, arguments);
    }

    return loginverificatAction;
  }();

  //send short message to cellphone


  _class.prototype.sendshortmsgcodeAction = function () {
    var _ref10 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee10() {
      var phoneNum, pm;
      return _regenerator2.default.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              phoneNum = this.get('phoneNum');

              console.log(phoneNum);
              console.log("----------sendShortMsgCodeAction  start-----------");
              _context10.next = 5;
              return mgr.sendShortMsgCode(0, 0, phoneNum).then(function (result) {
                //console.log(result);
                return result;
              });

            case 5:
              pm = _context10.sent;

              console.log("-----------------------");
              console.log(pm);
              return _context10.abrupt('return', this.display());

            case 9:
            case 'end':
              return _context10.stop();
          }
        }
      }, _callee10, this);
    }));

    function sendshortmsgcodeAction() {
      return _ref10.apply(this, arguments);
    }

    return sendshortmsgcodeAction;
  }();

  _class.prototype.verificationcodeAction = function () {
    var _ref11 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee11() {
      var phoneNum, code, pm;
      return _regenerator2.default.wrap(function _callee11$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              phoneNum = this.get('phoneNum');
              code = this.get('code');

              console.log(phoneNum + code);
              console.log("----------verificationCode start -----------");
              _context11.next = 6;
              return mgr.verificationCode(phoneNum, code).then(function (result) {

                //console.log(result);
                return result;
              });

            case 6:
              pm = _context11.sent;
              return _context11.abrupt('return', pm);

            case 9:
            case 'end':
              return _context11.stop();
          }
        }
      }, _callee11, this);
    }));

    function verificationcodeAction() {
      return _ref11.apply(this, arguments);
    }

    return verificationcodeAction;
  }();

  return _class;
}(_base2.default);

exports.default = _class;
//# sourceMappingURL=user.js.map