'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _base = require('./base.js');

var _base2 = _interopRequireDefault(_base);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _class = function (_Base) {
  (0, _inherits3.default)(_class, _Base);

  function _class() {
    (0, _classCallCheck3.default)(this, _class);
    return (0, _possibleConstructorReturn3.default)(this, _Base.apply(this, arguments));
  }

  _class.prototype.getAction = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!think.isEmpty(this.get("id")) || !think.isEmpty(this.post('type'))) {
                this.detail();
              } else {
                this.list();
              }

            case 1:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function getAction() {
      return _ref.apply(this, arguments);
    }

    return getAction;
  }();

  _class.prototype.detail = function () {
    var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {
      var where, boss;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              where = {};

              if (this.post('type')) {
                where = { type: this.get('type') };
              } else if (this.get('id')) {
                where = { id: this.get('id') };
              }
              _context2.next = 4;
              return this.model('boss').where(where).find();

            case 4:
              boss = _context2.sent;
              return _context2.abrupt('return', this.success(boss));

            case 6:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function detail() {
      return _ref2.apply(this, arguments);
    }

    return detail;
  }();

  _class.prototype.list = function () {
    var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3() {
      var list;
      return _regenerator2.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return this.model('boss').select();

            case 2:
              list = _context3.sent;
              return _context3.abrupt('return', this.success(list));

            case 4:
            case 'end':
              return _context3.stop();
          }
        }
      }, _callee3, this);
    }));

    function list() {
      return _ref3.apply(this, arguments);
    }

    return list;
  }();

  _class.prototype.postAction = function () {
    var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {
      var boss;
      return _regenerator2.default.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              if (!(!this.post('id') && !this.post('type'))) {
                _context4.next = 2;
                break;
              }

              return _context4.abrupt('return', this.fail('ADMIN_PARAM_LACKED'));

            case 2:
              _context4.next = 4;
              return this.model('boss').where({ type: this.post('type') }).find();

            case 4:
              boss = _context4.sent;

              if (boss) {
                _context4.next = 11;
                break;
              }

              _context4.next = 8;
              return this.model('boss').add(this.post());

            case 8:
              boss = _context4.sent;
              _context4.next = 18;
              break;

            case 11:
              if (!(boss.id == this.post('id'))) {
                _context4.next = 17;
                break;
              }

              _context4.next = 14;
              return this.model('boss').update(this.post());

            case 14:
              boss = _context4.sent;
              _context4.next = 18;
              break;

            case 17:
              return _context4.abrupt('return', this.fail('ADMIN_PARAM_ERROR'));

            case 18:
              return _context4.abrupt('return', this.success(boss));

            case 19:
            case 'end':
              return _context4.stop();
          }
        }
      }, _callee4, this);
    }));

    function postAction() {
      return _ref4.apply(this, arguments);
    }

    return postAction;
  }();

  return _class;
}(_base2.default);

exports.default = _class;
//# sourceMappingURL=boss.js.map