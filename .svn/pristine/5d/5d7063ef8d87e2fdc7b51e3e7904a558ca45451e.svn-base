'use strict';

exports.__esModule = true;

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _base = require('./base.js');

var _base2 = _interopRequireDefault(_base);

var _usermgr = require('../connect/usermgr.js');

var _usermgr2 = _interopRequireDefault(_usermgr);

var _bizmgr = require('../connect/bizmgr.js');

var _bizmgr2 = _interopRequireDefault(_bizmgr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mgr = new _usermgr2.default();
//-------------------------------
var mgm = new _bizmgr2.default();
var errorCode = 0;

var _class = function (_Base) {
    (0, _inherits3.default)(_class, _Base);

    function _class() {
        (0, _classCallCheck3.default)(this, _class);
        return (0, _possibleConstructorReturn3.default)(this, _Base.apply(this, arguments));
    }

    _class.prototype.indexAction = function () {
        var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
            return _regenerator2.default.wrap(function _callee$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            return _context.abrupt('return', this.display());

                        case 1:
                        case 'end':
                            return _context.stop();
                    }
                }
            }, _callee, this);
        }));

        function indexAction() {
            return _ref.apply(this, arguments);
        }

        return indexAction;
    }();

    _class.prototype.testpageAction = function () {
        var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {
            return _regenerator2.default.wrap(function _callee2$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            return _context2.abrupt('return', this.display());

                        case 1:
                        case 'end':
                            return _context2.stop();
                    }
                }
            }, _callee2, this);
        }));

        function testpageAction() {
            return _ref2.apply(this, arguments);
        }

        return testpageAction;
    }();

    _class.prototype.adduserAction = function () {
        var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3() {
            var year;
            return _regenerator2.default.wrap(function _callee3$(_context3) {
                while (1) {
                    switch (_context3.prev = _context3.next) {
                        case 0:
                            year = this.get('year');

                            console.log(year);
                            //如果是get请求，直接显示登录页面

                            if (!this.isGet()) {
                                _context3.next = 4;
                                break;
                            }

                            return _context3.abrupt('return', this.display());

                        case 4:
                        case 'end':
                            return _context3.stop();
                    }
                }
            }, _callee3, this);
        }));

        function adduserAction() {
            return _ref3.apply(this, arguments);
        }

        return adduserAction;
    }();

    _class.prototype.discpriceinforAction = function () {
        var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {
            var discinfor, startDate, endDate, startDate1, endDate1;
            return _regenerator2.default.wrap(function _callee4$(_context4) {
                while (1) {
                    switch (_context4.prev = _context4.next) {
                        case 0:
                            discinfor = this.get();

                            console.log("======discinforAction start=============");

                            console.log(discinfor);

                            this.assign("discinfor", discinfor);
                            //change time format

                            console.log(discinfor.startDate);
                            console.log(discinfor.endDate);
                            startDate = discinfor.startDate;
                            endDate = discinfor.endDate;
                            startDate1 = startDate.substring(0, 10);
                            endDate1 = endDate.substring(0, 10);

                            console.log(startDate1);
                            this.assign("startDate1", startDate1);
                            this.assign("endDate1", endDate1);
                            if (discinfor.itemId == 1) {
                                this.assign("itemname", "FD-Tissue-180");
                            }

                            if (discinfor.itemId == 2) {

                                this.assign("itemname", "FD-ctDNA-180");
                            }

                            if (discinfor.itemId == 3) {
                                this.assign("itemname", "FD-Tissue-600");
                            }

                            if (discinfor.itemId == 4) {

                                this.assign("itemname", "FD-ctDNA-600");
                            }
                            if (discinfor.itemId == 5) {
                                this.assign("itemname", "FD-Exome");
                            }

                            if (discinfor.itemId == 6) {

                                this.assign("itemname", "FD-ctDNA-Exome");
                            }
                            if (discinfor.itemId == 7) {
                                this.assign("itemname", "FD-Tissue-RNA");
                            }

                            if (discinfor.itemId == 8) {

                                this.assign("itemname", "FD-Tissue-180+FD-ctDNA-180");
                            }
                            if (discinfor.itemId == 9) {

                                this.assign("itemname", "FD-Tissue-600+FD-ctDNA-600");
                            }
                            //return this.redirect("/back/discpriceinfor");


                            return _context4.abrupt('return', this.display());

                        case 23:
                        case 'end':
                            return _context4.stop();
                    }
                }
            }, _callee4, this);
        }));

        function discpriceinforAction() {
            return _ref4.apply(this, arguments);
        }

        return discpriceinforAction;
    }();

    _class.prototype.updatepriceAction = function () {
        var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5() {
            var updateinfor, senderId, pm;
            return _regenerator2.default.wrap(function _callee5$(_context5) {
                while (1) {
                    switch (_context5.prev = _context5.next) {
                        case 0:
                            updateinfor = this.post();


                            console.log("======updatepriceAction start==========");
                            console.log(updateinfor);
                            senderId = this.cookie('userId');
                            _context5.prev = 4;
                            _context5.next = 7;
                            return mgm.updateProductionPrice(senderId, updateinfor.itemId, updateinfor.name, updateinfor.desc, updateinfor.price).then(function (result) {

                                return result;
                            }, function (error) {

                                return error;
                            });

                        case 7:
                            pm = _context5.sent;
                            _context5.next = 12;
                            break;

                        case 10:
                            _context5.prev = 10;
                            _context5.t0 = _context5['catch'](4);

                        case 12:
                            return _context5.abrupt('return', this.redirect('pricelist'));

                        case 13:
                        case 'end':
                            return _context5.stop();
                    }
                }
            }, _callee5, this, [[4, 10]]);
        }));

        function updatepriceAction() {
            return _ref5.apply(this, arguments);
        }

        return updatepriceAction;
    }();

    _class.prototype.productioninforAction = function () {
        var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6() {
            var infor, name;
            return _regenerator2.default.wrap(function _callee6$(_context6) {
                while (1) {
                    switch (_context6.prev = _context6.next) {
                        case 0:

                            try {
                                infor = this.get();

                                console.log("============[productioninforAction start]=========== ");

                                // var name = encodeURIComponent(infor.name);
                                //var name1 = decodeURI(name)
                                name = infor.name;


                                if (name == "FD-Tissue-180 FD-ctDNA-180") {

                                    name = "FD-Tissue-180+FD-ctDNA-180";
                                }
                                if (name == "FD-Tissue-600 FD-ctDNA-600") {

                                    name = "FD-Tissue-600+FD-ctDNA-600";
                                }
                                this.assign("name1", name);
                                console.log(infor);
                                this.assign("infor", infor);
                            } catch (e) {}

                            return _context6.abrupt('return', this.display());

                        case 2:
                        case 'end':
                            return _context6.stop();
                    }
                }
            }, _callee6, this);
        }));

        function productioninforAction() {
            return _ref6.apply(this, arguments);
        }

        return productioninforAction;
    }();

    _class.prototype.updateuserAction = function () {
        var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7() {
            var infor, senderId, pm;
            return _regenerator2.default.wrap(function _callee7$(_context7) {
                while (1) {
                    switch (_context7.prev = _context7.next) {
                        case 0:
                            _context7.prev = 0;
                            infor = this.post();

                            console.log("=====updateuserAction start=======");
                            console.log(infor);
                            senderId = this.cookie('userId');
                            //var userId = this.get('userId');

                            _context7.next = 7;
                            return mgr.updateUserInfor(senderId, infor, null, false, null).then(function (result) {

                                return result;
                            }, function (error) {

                                console.log(error);
                            });

                        case 7:
                            pm = _context7.sent;
                            _context7.next = 12;
                            break;

                        case 10:
                            _context7.prev = 10;
                            _context7.t0 = _context7['catch'](0);

                        case 12:
                            return _context7.abrupt('return', this.redirect("userlist"));

                        case 13:
                        case 'end':
                            return _context7.stop();
                    }
                }
            }, _callee7, this, [[0, 10]]);
        }));

        function updateuserAction() {
            return _ref7.apply(this, arguments);
        }

        return updateuserAction;
    }();

    _class.prototype.userinforAction = function () {
        var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8() {
            var infor;
            return _regenerator2.default.wrap(function _callee8$(_context8) {
                while (1) {
                    switch (_context8.prev = _context8.next) {
                        case 0:
                            _context8.prev = 0;
                            infor = this.get();

                            console.log("============[userinforAction]=========== ");
                            console.log(infor);
                            this.assign("infor", infor);

                            return _context8.abrupt('return', this.display());

                        case 8:
                            _context8.prev = 8;
                            _context8.t0 = _context8['catch'](0);

                        case 10:
                        case 'end':
                            return _context8.stop();
                    }
                }
            }, _callee8, this, [[0, 8]]);
        }));

        function userinforAction() {
            return _ref8.apply(this, arguments);
        }

        return userinforAction;
    }();

    _class.prototype.deleteuserAction = function () {
        var _ref9 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee9() {
            var senderId, userId, pm;
            return _regenerator2.default.wrap(function _callee9$(_context9) {
                while (1) {
                    switch (_context9.prev = _context9.next) {
                        case 0:
                            _context9.prev = 0;
                            senderId = this.cookie('userId');
                            userId = this.get('userId');

                            console.log("[userlistAction] " + userId);
                            _context9.next = 6;
                            return mgr.deleteUser(senderId, userId).then(function (result) {
                                //process.stdout.write(result);
                                //console.log(result.toString()); 
                                //var ret = JSON.parse(result.toString());

                                return result;
                            }, function (error) {
                                console.log(error);
                            });

                        case 6:
                            pm = _context9.sent;


                            console.log("========deleteuserAction start================");
                            console.log(pm);
                            //return this.redirect('/back/userlist');
                            return _context9.abrupt('return', this.redirect('/back/userlist'));

                        case 12:
                            _context9.prev = 12;
                            _context9.t0 = _context9['catch'](0);
                            return _context9.abrupt('return', this.redirect("/index/index"));

                        case 15:
                        case 'end':
                            return _context9.stop();
                    }
                }
            }, _callee9, this, [[0, 12]]);
        }));

        function deleteuserAction() {
            return _ref9.apply(this, arguments);
        }

        return deleteuserAction;
    }();

    _class.prototype.disclistAction = function () {
        var _ref10 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee10() {
            var role, userId, pm, effactiveDate4, effactiveDate, effactiveDate1, effactiveDate2, effactiveDateTotal, discList1, j, startDate1, endDate1, startDate2, endDate2, startDateTotal, endDateTotal;
            return _regenerator2.default.wrap(function _callee10$(_context10) {
                while (1) {
                    switch (_context10.prev = _context10.next) {
                        case 0:
                            role = this.cookie('role');
                            userId = this.cookie('userId');

                            if (!(this.isGet() && role == 'admin')) {
                                _context10.next = 31;
                                break;
                            }

                            _context10.prev = 3;

                            //var userId = this.cookie('userId');
                            console.log("[userlistAction] " + userId);
                            _context10.next = 7;
                            return mgm.getDiscPriceList(userId).then(function (result) {
                                //process.stdout.write(result);
                                //console.log(result.toString()); 
                                //var ret = JSON.parse(result.toString());
                                // pm.pname = BizMgr.getPrductName(pm.productid)
                                return result;
                            }, function (error) {
                                console.log(error);
                            });

                        case 7:
                            pm = _context10.sent;

                            console.log("======disclistAction pm=========");
                            console.log(pm);
                            //判断日期

                            if (!(this.isGet() && this.get('flag') == 'true')) {
                                _context10.next = 22;
                                break;
                            }

                            console.log("======judge start========");
                            //console.log(pm.discList);
                            effactiveDate4 = new Date();
                            effactiveDate = (0, _stringify2.default)(effactiveDate4);
                            effactiveDate1 = effactiveDate.substring(1, 11);
                            effactiveDate2 = effactiveDate1.split("-");
                            effactiveDateTotal = parseInt(effactiveDate2[0]) * 365 * 24 * 3600 + parseInt(effactiveDate2[1]) * 24 * 3600 + parseInt(effactiveDate2[2]) * 3600;
                            discList1 = new Array();

                            for (j in pm.discList) {

                                //console.log(effactiveDate1);
                                startDate1 = pm.discList[j].startDate.substring(0, 10);
                                endDate1 = pm.discList[j].endDate.substring(0, 10);
                                startDate2 = startDate1.split("-");
                                endDate2 = endDate1.split("-");

                                // console.log(startDate2[1]*24*3600);

                                startDateTotal = startDate2[0] * 365 * 24 * 3600 + startDate2[1] * 24 * 3600 + startDate2[2] * 3600;
                                endDateTotal = endDate2[0] * 365 * 24 * 3600 + endDate2[1] * 24 * 3600 + endDate2[2] * 3600;
                                // console.log(effactiveDateTotal+"|||"+endDateTotal);

                                // console.log(startDateTotal+"|"+endDateTotal);

                                if (startDateTotal <= effactiveDateTotal && endDateTotal >= effactiveDateTotal) {
                                    discList1.push(pm.discList[j]);
                                    //console.log(pm.discList[j].startDate);
                                }
                                // let discList2 = discList1;

                            }
                            console.log(discList1);
                            this.assign('disclist', discList1);
                            return _context10.abrupt('return', this.display());

                        case 22:

                            this.assign('disclist', pm.discList);

                            /* 
                             var pmstr = pm;
                             console.log(pmstr);
                            // console.log(typeof pm.userList);
                            // console.log(pm.userList.toString())
                             this.assign('userlist',pm.userList);
                             this.assign('pm',pm);*/

                            return _context10.abrupt('return', this.display());

                        case 26:
                            _context10.prev = 26;
                            _context10.t0 = _context10['catch'](3);
                            return _context10.abrupt('return', this.redirect("/index/index"));

                        case 29:
                            _context10.next = 32;
                            break;

                        case 31:
                            return _context10.abrupt('return', this.redirect("/index/index"));

                        case 32:
                        case 'end':
                            return _context10.stop();
                    }
                }
            }, _callee10, this, [[3, 26]]);
        }));

        function disclistAction() {
            return _ref10.apply(this, arguments);
        }

        return disclistAction;
    }();

    _class.prototype.pricelistAction = function () {
        var _ref11 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee11() {
            var role, userId, pm, pmstr;
            return _regenerator2.default.wrap(function _callee11$(_context11) {
                while (1) {
                    switch (_context11.prev = _context11.next) {
                        case 0:
                            role = this.cookie('role');
                            userId = this.cookie('userId');

                            if (!(this.isGet() && role == 'admin')) {
                                _context11.next = 23;
                                break;
                            }

                            _context11.prev = 3;


                            console.log("[userlistAction] " + userId);
                            _context11.next = 7;
                            return mgm.getTestItemList(userId).then(function (result) {
                                //process.stdout.write(result);
                                //console.log(result.toString()); 
                                //var ret = JSON.parse(result.toString());

                                return result;
                            }, function (error) {
                                console.log(error);
                            });

                        case 7:
                            pm = _context11.sent;

                            console.log("======pricelistAction pm=========");
                            console.log(pm);
                            /* for(let j in pm.itemList){
                                var elm = pm.userList[j];
                                console.log(elm.userId + "|" + elm.name + "|" + elm.password); 
                                this.assign('elm',elm);*/
                            this.assign('itemlist', pm.itemList);

                            /* }*/
                            // console.log(pm);
                            pmstr = pm;

                            console.log(pmstr);
                            // console.log(typeof pm.userList);
                            // console.log(pm.userList.toString())
                            this.assign('userlist', pm.userList);
                            this.assign('pm', pm);
                            //this.assign('json',"{name:jiang,age:25}");
                            return _context11.abrupt('return', this.display());

                        case 18:
                            _context11.prev = 18;
                            _context11.t0 = _context11['catch'](3);
                            return _context11.abrupt('return', this.redirect("/index/index"));

                        case 21:
                            _context11.next = 24;
                            break;

                        case 23:
                            return _context11.abrupt('return', this.redirect("/index/index"));

                        case 24:
                        case 'end':
                            return _context11.stop();
                    }
                }
            }, _callee11, this, [[3, 18]]);
        }));

        function pricelistAction() {
            return _ref11.apply(this, arguments);
        }

        return pricelistAction;
    }();

    _class.prototype.userlistAction = function () {
        var _ref12 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee12() {
            var role, userId, pm, j, elm, pmstr;
            return _regenerator2.default.wrap(function _callee12$(_context12) {
                while (1) {
                    switch (_context12.prev = _context12.next) {
                        case 0:
                            role = this.cookie('role');
                            userId = this.cookie('userId');

                            if (!(this.isGet() && role == 'admin')) {
                                _context12.next = 22;
                                break;
                            }

                            _context12.prev = 3;


                            //var userId = this.cookie('userId');
                            console.log("[userlistAction] " + userId);
                            _context12.next = 7;
                            return mgr.getUserList(userId, "").then(function (result) {
                                //process.stdout.write(result);
                                //console.log(result.toString()); 
                                //var ret = JSON.parse(result.toString());

                                return result;
                            }, function (error) {
                                console.log(error);
                            });

                        case 7:
                            pm = _context12.sent;


                            for (j in pm.userList) {
                                elm = pm.userList[j];

                                console.log(elm.userId + "|" + elm.name + "|" + elm.password);
                                this.assign('elm', elm);

                                this.assign('userlist', pm.userList);
                            }
                            // console.log(pm);
                            pmstr = pm;

                            console.log(pmstr);
                            // console.log(typeof pm.userList);
                            // console.log(pm.userList.toString())
                            this.assign('userlist', pm.userList);
                            this.assign('pm', pm);
                            this.assign('json', "{name:jiang,age:25}");
                            return _context12.abrupt('return', this.display());

                        case 17:
                            _context12.prev = 17;
                            _context12.t0 = _context12['catch'](3);
                            return _context12.abrupt('return', this.redirect("/index/index"));

                        case 20:
                            _context12.next = 23;
                            break;

                        case 22:
                            return _context12.abrupt('return', this.redirect("/index/index"));

                        case 23:
                        case 'end':
                            return _context12.stop();
                    }
                }
            }, _callee12, this, [[3, 17]]);
        }));

        function userlistAction() {
            return _ref12.apply(this, arguments);
        }

        return userlistAction;
    }();

    _class.prototype.testAction = function () {
        var _ref13 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee13() {
            var infor, userId1, userId2, userId, secToken, infor1, inforStr, pm, pm2;
            return _regenerator2.default.wrap(function _callee13$(_context13) {
                while (1) {
                    switch (_context13.prev = _context13.next) {
                        case 0:

                            console.log("-----------------------------------");
                            infor = this.post();

                            console.log("-------start---------");
                            console.log(infor);
                            userId1 = infor.reqReserved;
                            userId2 = userId1.split(",");
                            userId = userId2[0];
                            secToken = userId2[1];
                            //var userId = this.cookie('userId');

                            infor1 = (0, _stringify2.default)(infor);

                            //console.log(infor1.txnType);


                            //对传过来的json重新排序
                            /*
                            var infor11 =
                            {txnType:infor.txnType,
                            respCode:infor.respCode, 
                            currencyCode:infor.currencyCode, 
                            merId:infor.merId,
                            settleDate:infor.settleDate, 
                            txnSubType:infor.txnSubType, 
                            version:infor.version, 
                            txnAmt:infor.txnAmt, 
                            signMethod:infor.signMethod, 
                            certId:infor.certId, 
                            settleAmt:infor.settleAmt, 
                            encoding:infor.encoding, 
                            settleCurrencyCode:infor.settleCurrencyCode, 
                            traceTime:infor.traceTime, 
                            bizType:infor.bizType,
                            respMsg:infor.respMsg, 
                            traceNo:infor.traceNo,
                            queryId:infor.queryId, 
                            orderId:infor.orderId,
                            signature:infor.signature,
                            accessType:infor.accessType,
                            txnTime:infor.txnTime} 
                             	var infor11 = 	
                            {
                             accessType:'0',
                             bizType:'000201',
                             certId:'69597475696',
                             currencyCode:'156',
                             encoding:'UTF-8',
                             merId:'898320573920750',
                             orderId:'20170419153547',
                             queryId:'201704191535478162748',
                             respCode:'00',
                             respMsg:'success',
                             settleAmt:'1',
                             settleCurrencyCode:'156',
                             settleDate:'0419',
                             signMethod:'01',
                             traceNo:'816274',
                             traceTime:'0419153547',
                             txnAmt:'1',
                             txnSubType:'01',
                             txnTime:'20170419153547',
                             txnType:'01',
                             version:'5.0.0',
                             signature:'p16MJKNPzXheCZ8/TkSwHOWIy2gB+f2ioVGRleeR9TvZXjJ+WCPxf5fdxRmrR5lUzRpHOWHLXhVe1jiLsik+K0N+UJwuWADsEobsUtm7b/wqH9G56MDc5uueIOTvh7GYaY4qTGbYdjN6UHPVf4d0BatBysX/JMDfW0iRvWHaDWJwAOJVqy7IdyhbmXe3/aXfLTb/ciqZsxEbJshdkJP0Q99E1FqqDHYp2WW3SJ4eawuLb97fyVNqymsQexzljVsdj1Fxz5g/jTW8krFmOmfvjgYLL6T28mCVGZjX1X7Cp2W+Ir37ie5rKnMV6DSnpCOZ82CsNfxaYjm7hNmO3X1oEA=='
                            }
                            */

                            //console.log("=========infor11===========");

                            console.log(infor);
                            inforStr = (0, _stringify2.default)(infor);

                            //	var test  = "{accessType:0,bizType:000201,certId:69597475696,currencyCode:156,encoding:UTF-8,merId:898320573920750,orderId:0000000241,queryId:201703241515424211028}"
                            //var test1 =encodeURI(test);

                            _context13.next = 13;
                            return mgm.unionVerify(userId, 'UTF-8', inforStr).then(function (result) {
                                console.log("=======result===========");
                                console.log(result);

                                return result;
                            });

                        case 13:
                            pm = _context13.sent;

                            console.log("=======testAction pm=============");
                            console.log(pm);

                            if (pm.errorCode == 0) {
                                //updTestInfo(senderId, secToken, testOrderId, custId, doctor, feeStatus, needRet, phone, 
                                //recvContactInfo, reportReceiver, sendDate, sendContactInfo, senderName, sendUnit, sendTechoffice, 
                                //testType, testStatus, itemId);


                                try {
                                    pm2 = mgm.unionBill(userId, 'UTF-8', inforStr).then(function (result) {
                                        console.log(result);
                                    }, function (error) {
                                        console.log(error);
                                    });
                                } catch (e) {
                                    console.log("开票失败");
                                }
                            }
                            return _context13.abrupt('return', this.redirect('/report/query'));

                        case 18:
                        case 'end':
                            return _context13.stop();
                    }
                }
            }, _callee13, this);
        }));

        function testAction() {
            return _ref13.apply(this, arguments);
        }

        return testAction;
    }();

    _class.prototype.backtestAction = function () {
        var _ref14 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee14() {
            return _regenerator2.default.wrap(function _callee14$(_context14) {
                while (1) {
                    switch (_context14.prev = _context14.next) {
                        case 0:

                            console.log("==========backtestAction========");

                            return _context14.abrupt('return', this.display());

                        case 2:
                        case 'end':
                            return _context14.stop();
                    }
                }
            }, _callee14, this);
        }));

        function backtestAction() {
            return _ref14.apply(this, arguments);
        }

        return backtestAction;
    }();
    /* async testAction(){
        console.log("==========testAction start========");
    
          var pm  = this.post();
          console.log(pm);
          
      return this.display();
     }*/

    return _class;
}(_base2.default);

exports.default = _class;
//# sourceMappingURL=back.js.map